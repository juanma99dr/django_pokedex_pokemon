# Generated by Django 4.0.2 on 2022-04-27 16:38

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el nombre del genero.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Generation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese la generacion correspondiente al pokemon.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Move',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del ataque', max_length=50)),
                ('category', models.CharField(choices=[('P', 'Physical'), ('E', 'Special'), ('S', 'Status')], default='P', help_text='categoria del movimiento', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('numPokedex', models.PositiveIntegerField(help_text='Numero correspondiente a la entrada en la pokedex del pokemon en cuestion.', primary_key=True, serialize=False, verbose_name='Nº Pokedex')),
                ('name', models.CharField(help_text='Nombre del pokemon', max_length=50)),
                ('description', models.TextField(help_text='Descripcion del pokemon.', max_length=255)),
                ('image', models.ImageField(default='default.jpg', help_text='Imagen del pokemon', upload_to='')),
                ('stats', models.CharField(choices=[('P', 'Perfect'), ('B', 'Good'), ('M', 'Lame')], default='B', help_text='Estado del pokemon', max_length=1)),
                ('evolutions', models.ManyToManyField(blank=True, help_text='Selecciona su linea evolutiva', to='pokedex.Pokemon')),
                ('generation', models.ForeignKey(help_text='Generacion en la que fue incluida el pokemon.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pokedex.generation')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingrese el tipo a añadir.', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TrainerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profilePic', models.ImageField(default='default.jpg', upload_to='')),
                ('description', models.TextField(help_text='Descripcion del usuario.', max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('is_admin', 'Admin'),),
            },
        ),
        migrations.CreateModel(
            name='PokemonInstance',
            fields=[
                ('identifier', models.UUIDField(default=uuid.uuid4, help_text='Id único para este ejemplar', primary_key=True, serialize=False)),
                ('nickname', models.CharField(default=None, help_text='Mote para el pokémon', max_length=50)),
                ('level', models.PositiveIntegerField(default=1, help_text='El nivel debe estar entre 1 y 100 incluidos.', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('date_of_birth', models.DateField(default=datetime.datetime.now)),
                ('gender', models.ForeignKey(help_text='Género del pokemon.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pokedex.gender')),
                ('moves', models.ManyToManyField(help_text='Selecciona sus movimientos', to='pokedex.Move')),
                ('pokemon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pokedex.pokemon')),
                ('trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['level'],
            },
        ),
        migrations.AddField(
            model_name='pokemon',
            name='type',
            field=models.ManyToManyField(blank=True, help_text='Seleccione su(s) tipo(s) correspondiente(s).', to='pokedex.Type'),
        ),
        migrations.AddField(
            model_name='move',
            name='type',
            field=models.ForeignKey(help_text='Tipo del movimiento', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pokedex.type'),
        ),
    ]
